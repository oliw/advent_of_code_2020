input = <<~INPUT
Tile 2311:
..##.#..#.
##..#.....
#...##..#.
####.#...#
##.##.###.
##...#.###
.#.#.#..##
..#....#..
###...#.#.
..###..###

Tile 1951:
#.##...##.
#.####...#
.....#..##
#...######
.##.#....#
.###.#####
###.##.##.
.###....#.
..#.#..#.#
#...##.#..

Tile 1171:
####...##.
#..##.#..#
##.#..#.#.
.###.####.
..###.####
.##....##.
.#...####.
#.##.####.
####..#...
.....##...

Tile 1427:
###.##.#..
.#..#.##..
.#.##.#..#
#.#.#.##.#
....#...##
...##..##.
...#.#####
.#.####.#.
..#..###.#
..##.#..#.

Tile 1489:
##.#.#....
..##...#..
.##..##...
..#...#...
#####...#.
#..#.#.#.#
...#.#.#..
##.#...##.
..##.##.##
###.##.#..

Tile 2473:
#....####.
#..#.##...
#.##..#...
######.#.#
.#...#.#.#
.#########
.###.#..#.
########.#
##...##.#.
..###.#.#.

Tile 2971:
..#.#....#
#...###...
#.#.###...
##.##..#..
.#####..##
.#..####.#
#..#.#..#.
..####.###
..#.#.###.
...#.#.#.#

Tile 2729:
...#.#.#.#
####.#....
..#.#.....
....#..#.#
.##..##.#.
.#.####...
####.#.#..
##.####...
##..#.##..
#.##...##.

Tile 3079:
#.#.#####.
.#..######
..#.......
######....
####.#..#.
.#...#.##.
#.#####.##
..#.###...
..#.......
..#.###...
INPUT

input = <<~INPUT
Tile 1753:
..##.#.#.#
#...#.....
#......#..
#..##..#.#
#..##....#
#.........
#.#...##..
#....#..##
##.......#
#...######

Tile 1699:
.###.....#
#.#......#
.....#....
#.....#..#
..........
#.#......#
...#......
#.........
.###......
.#....#.#.

Tile 2297:
####....##
....#...#.
###...#...
...##.....
#...#..#.#
..........
#......#.#
.........#
..........
#..##.##..

Tile 2017:
#....#..##
.#.#..#..#
....##....
#...#....#
#.#.......
..........
#.#......#
....##...#
...#....##
..###.##.#

Tile 1283:
.#....##..
###...##..
#.........
#........#
...####..#
.#........
....#.....
........#.
#....#..#.
..#.####.#

Tile 1171:
.#..#.#.##
.........#
#...##..##
#...#....#
.......#..
####.#...#
..#....#..
#.........
#...#....#
#..#.#.###

Tile 2251:
.##.##..#.
.###.##..#
#..##.#.#.
#....#..#.
.#........
......#..#
.....#...#
.###.#....
##...##..#
.####.#.##

Tile 2357:
###...##.#
......#.##
#........#
..#....#.#
..#...##..
#....##..#
........#.
#........#
#.##...#..
###.##.#..

Tile 2503:
...#...###
..#......#
#......##.
#...#.....
.....#..#.
##...#..##
.......#.#
.#...#.#..
#.......#.
##..#..###

Tile 1741:
.#....##.#
#.....#...
...#...#..
##....#...
.##....###
#.###.#..#
#..#....##
#.##.....#
#.#.......
###.##...#

Tile 3433:
#.......#.
#.#.......
.....#..#.
#........#
###.#..#..
#....#....
.....#...#
..#......#
....#.#.##
##.##.....

Tile 3947:
.##.##.###
#.#...#.##
...#.##..#
#.......##
..#.......
.#...#...#
.....###.#
####..##.#
.##..#.#..
..###..#.#

Tile 1627:
##....##.#
#....#....
....##...#
##..#.....
#..#....#.
.#..#.##.#
.#.......#
#.........
.#...##..#
#.#....#..

Tile 1667:
###.#...##
#..#.##..#
##.....#.#
.#........
..#....#.#
.##.......
......#...
....###.#.
##.#..#.#.
.#..##...#

Tile 2287:
##..####.#
#.........
#.##...#..
#..#....#.
#........#
......##..
#.##..#..#
...#.....#
.........#
#####..###

Tile 1787:
.##.#.#.#.
#.##.....#
.........#
...#......
..#..#...#
##....#..#
##.......#
..#.......
...#....#.
.##.####..

Tile 1873:
..#.###.##
.......#.#
#.#.......
#...#.##.#
......##..
.#.....#.#
...##...#.
........#.
.......#.#
..######.#

Tile 3709:
..##..##.#
##.......#
#.........
....#.....
#..#...#.#
.#....#..#
...##....#
#..#.....#
....##....
.##.###...

Tile 3137:
###..#.#.#
.........#
#....#....
#.#......#
...#.#.#.#
..#...#...
.........#
.........#
#.........
##..###..#

Tile 1423:
###.##..##
..........
...#.....#
.......#.#
..........
##.......#
##........
#.#....#..
#.#.....##
.##...#.##

Tile 1399:
#.#.#....#
.........#
#..#..#..#
..#.......
...#..##.#
#..##...##
#..#.....#
#.##.#.#.#
.....#...#
####.....#

Tile 2411:
.##.#.#..#
##..##...#
#..#......
##..#.##.#
.......#.#
##........
#...#...#.
.....#.#..
........##
#####.#..#

Tile 3323:
##.#...###
.........#
.....#....
#...#.#..#
#........#
....#...##
#........#
#.....###.
...#.#...#
#.#...#...

Tile 1213:
..##.##...
.....##..#
#.....#..#
#........#
...#...#.#
#.....#...
.#.#.##...
.....#...#
#...#.#...
.###.#####

Tile 1619:
#..###..##
#.#.#.....
#........#
.........#
###...#.##
.#........
..........
..........
#........#
##.###.#.#

Tile 1997:
#....#....
..#......#
#.#...#..#
#..#.....#
#.....#..#
#.#......#
#.........
.........#
.....#...#
#####..##.

Tile 3533:
#....#.#.#
......##.#
......##..
#.....#..#
....#..#.#
.....#...#
.#.#...#.#
#...#..###
#...#.#...
.#..###.##

Tile 3389:
#..###....
.#..#....#
#.#...#.#.
.........#
#....#...#
#.#....#.#
......#..#
##.......#
##........
...#####..

Tile 3413:
..##.##..#
#........#
#....#.#..
#....#....
.....##..#
.........#
....#.#..#
#.#.#.#...
#....#...#
.####..#.#

Tile 3833:
##.......#
.........#
#.###...#.
.....#.#..
#.........
#.....#...
##.#......
####.##..#
....##...#
.#.#...#..

Tile 2273:
.##.#.#.##
#........#
#.#....#..
##..#....#
....#.....
#.......#.
.#........
.#...#....
#........#
.###...##.

Tile 1987:
...#...###
#..#......
#...#....#
...##.....
#........#
.....##...
#....##..#
.#..##...#
....#..#.#
##.##..##.

Tile 3877:
.##...#.##
..........
..#.#.....
..........
#..##...#.
#.#.....#.
.#.......#
.#..#.#...
...#...#..
#.##..#..#

Tile 3109:
##....##..
##...#.#..
..........
...#.....#
.####..###
.#.##..#.#
#.#...#...
..........
#.......#.
##......#.

Tile 3907:
#####.##.#
##.....#.#
..##..#...
.##....#.#
..#.....##
#.........
.........#
#.........
........##
.#...#.#.#

Tile 1823:
##...#.#.#
#.........
..........
....#.....
...#.##...
##...#...#
#.........
##....#.##
#...##..#.
#####.#.#.

Tile 1747:
.#...##.#.
...#.#....
..#.##....
#...##...#
...#......
#....##..#
...#.....#
...##..#.#
#.###....#
#......###

Tile 3671:
.####..###
#.#......#
..........
#.....#...
.#..#.#...
..........
#.........
#.........
..........
#..#..##.#

Tile 3541:
###..#####
##....#.#.
.......#..
....#.....
#.#.....##
#.###..###
...#.#....
.#.......#
.....#....
..#####..#

Tile 3457:
#..###....
#....#..##
.##......#
#....#..#.
..........
#........#
..........
...#...#..
#.....##.#
.##..#.#..

Tile 1721:
..##.##.##
.........#
..#.......
##.......#
...#.....#
...#...#..
#..##.....
........##
#.#......#
..#.#..###

Tile 1597:
#.#...#..#
..#.......
#.....#..#
..#......#
..#..#...#
#..####...
...#......
#.#.#.#..#
....#...#.
#.##...#.#

Tile 2087:
####.#.###
#...#....#
##.......#
##......##
#.#......#
..........
#....##...
....#..#.#
####....#.
######.##.

Tile 2309:
...###...#
.##.......
.....#...#
#......#.#
##.......#
####.#....
#.........
##.#......
..#..#..#.
####.#.#.#

Tile 3797:
##..######
.....#....
#.###....#
.#.......#
..........
#......#.#
#..#......
...#.#....
#.........
#.###...##

Tile 2663:
#....#.##.
..........
.#.......#
##.....#..
.#....#...
#......#..
#..#....##
.#..#....#
........##
....######

Tile 3779:
.##....#.#
##.#..#..#
#.........
#.........
..#..#.#.#
.......##.
#....#...#
#........#
###.......
#..##.###.

Tile 1163:
#####.#.##
#......###
..........
#..#....#.
#..##...##
#...#.....
#..##.#..#
#....#.###
#....#...#
##.#.####.

Tile 2683:
....#.##.#
#.....#.##
.#....#...
.#.......#
......##..
.#.#.....#
.........#
.......#..
..........
######.#.#

Tile 1783:
#.###.##.#
.......#.#
#..#....##
.#..#.#.#.
#........#
#.......##
#....###.#
..##.#.#.#
.....#..##
..######.#

Tile 1097:
#.##..#...
....#...##
#...#.....
.....#....
.....#..##
...##..#..
..#...#...
#.........
#..##..#.#
#.####...#

Tile 2731:
.#.##.#.#.
......#...
.....##..#
...#..#..#
###......#
#...#.#..#
..###....#
.....#...#
#...#....#
.##.#.#...

Tile 1433:
###.###.##
...#.#....
..........
..#......#
..#.......
#..#......
..##.....#
..........
#.#..##..#
##..##.#.#

Tile 3853:
..##..#..#
#.#.......
.....#...#
....#..#..
.......#.#
##...##...
##......##
.........#
##..#...##
#.#..#....

Tile 3169:
.###....#.
##.#....##
#.........
#.........
..#.......
#.......#.
.#.##....#
.#....#...
##..##.#..
#######..#

Tile 3299:
##..##...#
..##......
###.##....
...#..##..
#...#.##..
.........#
##....#...
.........#
.#...#.#.#
##.#.....#

Tile 2999:
##..#.....
#..#.....#
#......#.#
.........#
#.........
.........#
.#...#....
........##
#.......#.
.###..#...

Tile 1499:
.######...
....##..#.
.#.....###
#...#.##.#
......#.#.
..#....#.#
.#.......#
......#.##
.......#..
###.####.#

Tile 2237:
#.#.###.#.
..#.......
#.#..#...#
#......##.
#####....#
.#......#.
##.#..###.
..#...#...
##........
....####.#

Tile 3049:
......#..#
...#....##
...##.....
.#.#..#...
.#......##
.#.#..#..#
.........#
.#.#....#.
..#.......
#.#..#..#.

Tile 1583:
#.#####...
#........#
........##
..#.......
.........#
#.#..#..#.
...#..##.#
....##..##
##.#.....#
####...###

Tile 2791:
.....###..
#...##....
....##...#
.........#
#.........
.#...##..#
#.........
#.#.#....#
##..#..#..
#.#..##..#

Tile 1879:
.#.###.#..
#......#.#
....#....#
......####
#......#.#
#....#.#..
......#...
#........#
#........#
#..###.###

Tile 2633:
##.#.....#
#.#......#
........#.
..#......#
#.....#..#
#.......##
#.....#...
...#.....#
#..#....#.
#..#.###.#

Tile 3701:
..##.##.#.
.........#
.#...##.##
..#.......
##.......#
.....#....
......##.#
.#.#...#.#
....#...##
#..#..#.##

Tile 2267:
.....##..#
...#.#.###
.......###
.#......##
.........#
#.....#..#
.........#
#....##..#
#.#....##.
...#####..

Tile 2687:
#..##.####
.....#...#
#....##..#
..........
.#.....#..
#........#
#...#.#...
#........#
#..#...##.
#..##..#.#

Tile 2113:
##.#.##..#
.#........
.......#.#
#.##.....#
.........#
...#......
#.#...#...
.##.......
..........
.#.#.#...#

Tile 3319:
...##..###
..........
.......#..
#....#..#.
..###....#
.#....#..#
#.#.#..#.#
..##...#..
.#.......#
#..#.####.

Tile 1303:
#..##....#
#....#....
#.......#.
#........#
...#...#..
..##.##.##
........#.
..........
....#..#.#
##..#.#.##

Tile 1709:
###.##.#.#
##.......#
#...#..#.#
..........
.........#
.........#
#.##....##
....#..###
.......#..
#.#......#

Tile 3547:
#....####.
#..##...##
##....#..#
#.........
..#.#....#
#....#...#
...#....##
..#.....##
........#.
.###.....#

Tile 2383:
#...#.#..#
...#..##..
##......##
#..#......
##......#.
#........#
........##
..........
#....#....
####..###.

Tile 3989:
..##.#..#.
#.......##
#.#......#
##.#.....#
#..#......
.........#
#.##......
...#.....#
.#........
#.##.#....

Tile 3499:
..##..#...
..#.#..#..
.##....###
##.......#
#..#.#..##
#....#...#
.........#
##.#.#.#..
.........#
#..###.##.

Tile 1049:
###....##.
........##
..........
..........
..........
....#...#.
.........#
#.........
.........#
##.####.#.

Tile 2467:
.....##.##
#.##......
..###...##
#..#.....#
..#....###
...#.....#
...#....##
.##...#...
...##...##
#.##...#.#

Tile 3343:
###...####
..........
#####.....
.#..#..###
#....#..#.
#........#
.....#...#
.......#..
#........#
##.#.#.###

Tile 2129:
##.####..#
#..#..#...
.#.....#.#
##.......#
##.#...#..
..#.#.#...
#....#...#
#.....##..
.#.....#..
..#######.

Tile 1483:
.##.#.##.#
##.#......
#.#....#..
#.#...#..#
#........#
.......#.#
##...#..##
#......#.#
..........
###.###.##

Tile 2393:
#.###.##.#
#......#..
..###..##.
##......##
.......#..
........#.
.......#..
#........#
..##.....#
#####..##.

Tile 2749:
..#.#.#.#.
.#.#......
#.#......#
....#.....
.##......#
.###......
##..#.....
.#..##..##
..###.#...
####.##.#.

Tile 1453:
#.##.#.##.
....#...##
#.#.......
...#......
....###..#
...#...#..
#...#.....
.#..#....#
##.......#
#..###.##.

Tile 2213:
#.#.##.##.
#.......#.
#......#..
#....#..#.
......#...
#..#.#....
....#...##
..#...#...
###.#....#
#..#.##.#.

Tile 2833:
.#.....#.#
..#...#..#
.##.....#.
..##....#.
.....#.###
........##
.#........
.##......#
......##..
#....##...

Tile 2671:
.##.#.#.#.
.#.##.#...
##...#...#
###...#...
..........
........##
..#......#
.#.......#
.#.#.#.#.#
#...##.#..

Tile 1801:
.#..#.####
#..##....#
.....#....
.#.......#
#.#.##...#
#.........
.........#
......#..#
..........
.#.....###

Tile 3329:
##.#..#...
..#.#.#..#
.........#
..........
......#...
#......#..
#.#...#...
.....###..
.....##...
#..#...#.#

Tile 2179:
....#.#.##
.......###
..#....###
#........#
...##....#
..###....#
.##.#....#
#..#......
.#........
#.#..###..

Tile 2003:
##.##.####
.....#....
#...#.#...
#..#.....#
.....#....
.......#..
#..#......
..#.....#.
#..#.....#
....#####.

Tile 2707:
..#..#.##.
.##.......
##.#......
.#.#..#...
.###..#.#.
#.........
#...#....#
#.##.##..#
##.......#
..#..#####

Tile 3847:
..##..#..#
.........#
..........
#.......#.
........#.
.##......#
.#.......#
.....#....
#..#......
#..###...#

Tile 1289:
#...##.#.#
#.....##..
....#.#...
.........#
....#....#
#..#.#....
#....#.#.#
.#...#.##.
#.....###.
#.##..####

Tile 1867:
####..##.#
#.##.....#
..#..##...
#...#....#
.###..#..#
....##....
..........
..#......#
##.......#
###.##....

Tile 1021:
####.##.#.
#...#.....
##.......#
#.#.#..#.#
##........
##....#...
###...#...
##.##.....
.##..#.#..
...#..##..

Tile 1427:
#..####...
.....#....
#.........
##........
#.#.......
........#.
.........#
#.#......#
..#......#
.####.#.#.

Tile 1307:
#.#.#...##
....#.....
#....#....
##....##..
.#.#.....#
#....#..##
.....#.#..
#........#
#........#
#..#####..

Tile 2099:
#..###.###
..........
#.#..#..##
..#.......
.........#
#.......##
.#.#.....#
..#..#..##
.##...##..
##....#.#.

Tile 2389:
#.###.#.##
##....#.##
#...#..###
.#.#...#.#
#.....#...
#......#..
...#...#..
#..#.##...
.......#.#
..#.#...##

Tile 2011:
#.##.#.#.#
#........#
#......###
.#..#.#..#
##..###..#
.#..#.##.#
#.#.#...#.
#.....#...
....#...##
.###.#....

Tile 2539:
###.#.#.##
......#.##
....##.#..
#.#...#..#
#..#......
##...#.#..
.........#
#.#....#.#
.##......#
.###..#.##

Tile 3761:
...#.#..#.
#.....#..#
#..#......
#..#.....#
##........
#..#.#....
#......#..
..#.##.#..
.#.#..#...
.....#.##.

Tile 2549:
.##.####..
#.#.......
#.##....#.
.#........
......#...
....#.##..
..#.....#.
...#..#..#
....#..###
##...##...

Tile 2039:
#.#.####.#
#.#....##.
..........
#.#.......
##.....#..
##....#.##
#...#.....
#...#...##
.#.#..##.#
.###......

Tile 2063:
.##.##..#.
..#.##....
#..#.#....
.#.......#
##........
#.#..#.#..
..........
...###....
#......#.#
#.##.....#

Tile 3181:
#####.####
#.....#..#
#.#......#
.........#
#....#....
.#.......#
......#..#
#......#..
#..#....##
#.....#..#

Tile 2459:
.##..#.#..
#...#..#.#
#.......##
#........#
.#.#.....#
#...#..##.
.......###
....#..###
........#.
...#.##..#

Tile 2953:
########.#
..#.......
#...##...#
........#.
#..#....#.
...#.#....
..........
#...#....#
........#.
##...##...

Tile 1487:
#.####.#..
.....#...#
#....#...#
..#......#
.....#...#
#...##...#
........#.
.#.....#..
#...#.....
.#.###.#..

Tile 1201:
..#...#..#
#.........
#.........
...#.....#
..#......#
..........
..........
#.#.......
#....#....
#.###.##..

Tile 1609:
##.##.###.
#........#
..........
#.........
........#.
.#.##..#.#
#..#....##
#.#....#..
.#...#....
##.#..#...

Tile 2593:
####.#.#..
#.#......#
..........
#..##.....
...#...#..
#..#.....#
..#.......
#........#
..#.......
..#..#..##

Tile 3889:
######..#.
....#.#.#.
##...#..##
....#....#
#...#....#
..##.##...
#.###....#
.#......##
#....#....
#....#...#

Tile 3041:
###.......
##..#...#.
##..#..#.#
......##.#
###....##.
..#...#...
#...#.....
##...#....
#......#.#
#...#.#.##

Tile 1367:
###.##.##.
..##.#...#
....#.....
#........#
###....#..
#.####....
####....#.
.###.#.##.
...#.....#
..#...####

Tile 2609:
.###...#.#
..........
#........#
...#.#.#.#
......#..#
#.....##..
#..#..#..#
.####..##.
##......##
#...##..##

Tile 3167:
########.#
.#..#....#
..#.......
..#..#.#..
.#.##.#..#
.##......#
##.....#.#
..#.#....#
#........#
.#...#.###

Tile 2753:
#...#....#
#....#...#
....#....#
#........#
..........
..........
#.........
#........#
#.........
.#....####

Tile 3527:
.####...##
........##
#......#.#
#...#..#..
.#......#.
.#.....#.#
#........#
#..#....#.
..#....##.
#.#..#####

Tile 1279:
.###...#.#
..#......#
#.......##
..........
#......#.#
.#...#....
.#........
#....##..#
#.##...#..
####..#..#

Tile 1291:
#......###
##.#.....#
..........
#.#..##...
......##.#
.#.....#..
..........
#.#......#
#.........
#..#...###

Tile 1319:
##..##.###
#.......#.
..........
###......#
..........
...##..#..
#.#..#....
#...#.....
.#...#...#
#..#.#..##

Tile 1009:
....##...#
#.....##.#
#....##...
.#.....#..
#...#.....
#.........
##........
#....#..##
...#...#.#
#######...

Tile 2659:
....####.#
#.##......
..#.....##
.#.......#
.#........
..##.....#
...#......
......#..#
#.#..#...#
#..#.##..#

Tile 1543:
#######.#.
#..#.#...#
.........#
##.#.....#
#.#......#
#.......##
..##......
..#.###..#
...#.....#
##.###..#.

Tile 1019:
........#.
#....#.#.#
...#......
##.#.#..##
....#.#.#.
#.###...##
####.#..#.
#....#....
#........#
.#...##.#.

Tile 2239:
##..###...
......#..#
##...#....
..........
....#...##
...#...#.#
..#.......
.........#
#..###...#
##...#...#

Tile 2797:
#.#..#....
#.......#.
#.#..#....
#......#..
#....##..#
#...#...##
#.#.......
.#.....#.#
##.......#
#...#.#.##

Tile 1663:
..##.#...#
#....##..#
....#....#
..#......#
#........#
..........
#..#.....#
#...#....#
#..#....#.
.#..#.#..#

Tile 1069:
#########.
.#........
###.......
...#....##
#....#....
#........#
#...#....#
.....#....
#.#......#
.#....##.#

Tile 1559:
##.###.#..
##...#....
..#......#
...#.#..#.
...##.#...
.#..#.#.##
#..#....#.
....#.#..#
..#.......
####.#....

Tile 3203:
##.##.#...
##........
..#..#...#
....#....#
..##.....#
#.....##..
..........
..........
#......#..
...#.#.##.

Tile 2819:
.####...##
...#.##...
..#....##.
........#.
...#...###
..#....#..
#.#.....##
#.#..#.#..
#...#.....
###.......

Tile 2027:
..#..##.##
#....#.#..
......#...
#.#....#..
.........#
........##
#.#.......
......#...
.......#.#
.#.#.##.#.

Tile 1091:
..#..###.#
...#.....#
.........#
#........#
..#.#..#..
#....#...#
....#.#..#
.......###
#.........
#..##.##.#

Tile 2381:
...###...#
#.#.#...#.
....#....#
#.....##..
#........#
..##....##
#.#......#
##.......#
.....#.###
.#.#######

Tile 1381:
######.##.
#.#....#..
#....###.#
#.#.....#.
#.#.#....#
#....#...#
#.#.#.#...
.#.#.#....
....#...#.
####.#####

Tile 3719:
...#.#...#
...#.....#
...#..#.##
#..#.....#
#.......##
##..#..#.#
.......#..
.##.......
.......##.
.#.#.###.#

Tile 3593:
##...##.#.
#.........
......#.#.
..........
..#......#
#........#
.....##..#
.#....#.##
.#.....###
#.#..#...#

Tile 2971:
..##.....#
#.....#.##
#.#......#
#....#....
.........#
#.........
#......#..
.......#.#
##....#..#
#.##.#..##

Tile 1637:
#.###.#..#
.#..#.#..#
.........#
......#.##
#..###...#
....#.#...
#.#.....##
#........#
......#..#
##..#.....

Tile 2711:
..##.##...
###..#...#
......#...
#.......#.
#.#.......
#.....##..
...#.##..#
..........
.....#...#
##.....###

Tile 3881:
..#####.##
.#....#..#
.........#
.##..#....
..###.#..#
...#......
...#...#.#
..#.......
#.....#...
.#.##.#...

Tile 1907:
..####..##
.......#..
.......#..
.........#
....#.##.#
..#..##...
....#....#
#...#....#
#........#
.#.##..#.#
INPUT

# input = <<~INPUT
# Tile 2311:
# ..##.#..#.
# ##..#.....
# #...##..#.
# ####.#...#
# ##.##.###.
# ##...#.###
# .#.#.#..##
# ..#....#..
# ###...#.#.
# ..###..###

# Tile 1951:
# #.##...##.
# #.####...#
# .....#..##
# #...######
# .##.#....#
# .###.#####
# ###.##.##.
# .###....#.
# ..#.#..#.#
# #...##.#..

# Tile 1171:
# ####...##.
# #..##.#..#
# ##.#..#.#.
# .###.####.
# ..###.####
# .##....##.
# .#...####.
# #.##.####.
# ####..#...
# .....##...

# Tile 1427:
# ###.##.#..
# .#..#.##..
# .#.##.#..#
# #.#.#.##.#
# ....#...##
# ...##..##.
# ...#.#####
# .#.####.#.
# ..#..###.#
# ..##.#..#.

# Tile 1489:
# ##.#.#....
# ..##...#..
# .##..##...
# ..#...#...
# #####...#.
# #..#.#.#.#
# ...#.#.#..
# ##.#...##.
# ..##.##.##
# ###.##.#..

# Tile 2473:
# #....####.
# #..#.##...
# #.##..#...
# ######.#.#
# .#...#.#.#
# .#########
# .###.#..#.
# ########.#
# ##...##.#.
# ..###.#.#.

# Tile 2971:
# ..#.#....#
# #...###...
# #.#.###...
# ##.##..#..
# .#####..##
# .#..####.#
# #..#.#..#.
# ..####.###
# ..#.#.###.
# ...#.#.#.#

# Tile 2729:
# ...#.#.#.#
# ####.#....
# ..#.#.....
# ....#..#.#
# .##..##.#.
# .#.####...
# ####.#.#..
# ##.####...
# ##..#.##..
# #.##...##.

# Tile 3079:
# #.#.#####.
# .#..######
# ..#.......
# ######....
# ####.#..#.
# .#...#.##.
# #.#####.##
# ..#.###...
# ..#.......
# ..#.###...
# INPUT

class Tile
  def initialize(id, image)
    @id = id
    @image = image
    @north_tile = nil
    @east_tile = nil
    @south_tile = nil
    @west_tile = nil
  end

  attr_accessor :id
  attr_accessor :image
  attr_accessor :north_tile
  attr_accessor :east_tile
  attr_accessor :south_tile
  attr_accessor :west_tile

  def attached_tiles
    [north_tile,east_tile,south_tile,west_tile].compact
  end

  def new_image
    n_image = []
    n_image_length = image.length
    image.length.times do
      new_row = []
      image[0].length.times do 
        new_row << nil
      end
      n_image << new_row
    end
    n_image
  end

  def borderless_image
    new_length = image.length-2
    row_offset = 1
    col_offset = 1
    new_image = []
    new_length.times do |r|
      row = []
      new_length.times do |c|
        row << image[r+row_offset][c+col_offset]
      end
      new_image << row
    end
    new_image
  end

  # L-R or T-B
  def edges
    result = []
    result << north_edge
    result << south_edge
    result << east_edge
    result << west_edge
    result
  end

  def north_edge
    image[0]
  end

  def south_edge
    image[-1]
  end

  def west_edge
    image.transpose[0]
  end

  def east_edge
    image.transpose[-1]
  end

  def num_matches(other_tile)
    (self.edges & other_tile.edges).length
  end

  def varients
    result = []
    
    4.times do |i|
      t = self
      i.times do
        t = t.rotate_90
      end
      result << t
      result << t.flip_horizontal
      result << t.flip_vertical
      result << t.flip_horizontal.flip_vertical
    end

    result
  end

  def rotate_90
    img = new_image
    image.length.times do |i|
      image[0].length.times do |j|
        img[i][j] = image[image.length-j-1][i];
      end
    end
    Tile.new(id, img)
  end

  def first_empty_edge
    return 'north' if north_tile.nil?
    return 'east' if east_tile.nil?
    return 'west' if west_tile.nil?
    return 'south' if south_tile.nil?
  end

  # flip along the horizontal axis
  def flip_horizontal
    img = new_image
    image.length.times do |i|
      image[0].length.times do |j|
        img[i][j] = image[image.length-i-1][j];
      end
    end
    Tile.new(id, img)
  end

  def flip_vertical
    img = new_image
    image.length.times do |i|
      image[0].length.times do |j|
        img[i][j] = image[i][image.length-j-1];
      end
    end
    Tile.new(id, img)
  end
end

# Corner pieces only line up with two pieces
# Edge pieces only line up with three pieces
# Center pieces only line up with four pieces

def parse_tile(raw_tile)
  raw_tile = raw_tile.split("\n")
  raw_id = raw_tile[0]
  raw_image = raw_tile[1..]
  id = /\d+/.match(raw_id)[0].to_i
  image = raw_image.map {|r| r.split("")}
  tile = Tile.new(id, image)
end

raw_tiles = input.split("\n\n")
tiles = raw_tiles.map {|t| parse_tile(t)}

def matches?(t, other_t)
  other_t.varients.any? do |other_tile_varient|
    t.num_matches(other_tile_varient) > 0
  end
end

possible_corner_pieces = tiles.select do |t|
  other_ts = tiles.select {|other_t| t != other_t}
  matches = other_ts.select {|other_t| matches?(t, other_t)}
  matches.length == 2
end

puts "Part 1"
puts "Num of possible_corner_pieces = #{possible_corner_pieces.length}"
puts "#{possible_corner_pieces.map(&:id).inject(1, :*)}"

SEALED = 0

def print_match(first, second, edge)
  puts "The #{edge} of the first matches the second"
  first.image.length.times do |i|
    puts "#{first.image[i].join(" ")}     #{second.image[i].join(" ")}"
  end
end

# Part 2
# Assemble the puzzle
class Box
  def initialize(tiles)
    @tiles = tiles
  end

  attr_accessor :tiles

  def empty?
    tiles.empty?
  end

  def has_pieces?
    !empty?
  end

  def take
    tiles.pop
  end

  def take_matching_piece_for_tile(tile, edge)
    matches = []
    mismatches = []
    tiles.each do |t|
      matching_t = nil
      t.varients.each do |rt|
        it_matches = false
        case edge
        when "north"
          it_matches = tile.north_edge == rt.south_edge 
        when "east"
          it_matches = tile.east_edge == rt.west_edge 
        when "south"
          it_matches = tile.south_edge == rt.north_edge
        when "west"
          it_matches = tile.west_edge == rt.east_edge
        end
        if it_matches
          matching_t = rt
          break
        end
      end
      if !matching_t.nil?
        matches << matching_t unless matching_t.nil?
        #print_match(tile, matching_t, edge)
      end
      mismatches << t if matching_t.nil?
    end

    if (matches.length > 1)
      puts "Warning: More than one matching tile (#{matches.length})"
    end

    if (matches.length == 0)
      return SEALED  
    end
    @tiles = mismatches
    matches.first
  end
end

require 'pry-nav'

puts "Part 2"
puts "Assembling the Puzzle"

box = Box.new(tiles)
first_piece = box.take

fixed_pieces = [first_piece]

puzzle = first_piece
while box.has_pieces?
  tile = fixed_pieces.find do |piece|
    piece.first_empty_edge != nil
  end
  case tile.first_empty_edge
  when "north"
    t = box.take_matching_piece_for_tile(tile, "north")
    tile.north_tile = t
    t.south_tile = tile unless t == SEALED
    fixed_pieces << t unless t == SEALED
  when "east"
    t = box.take_matching_piece_for_tile(tile, "east")
    tile.east_tile = t
    t.west_tile = tile unless t == SEALED
    fixed_pieces << t unless t == SEALED
  when "south"
    t = box.take_matching_piece_for_tile(tile, "south")
    tile.south_tile = t
    t.north_tile = tile unless t == SEALED
    fixed_pieces << t unless t == SEALED
  when "west"
    t = box.take_matching_piece_for_tile(tile, "west")
    tile.west_tile = t
    t.east_tile = tile unless t == SEALED
    fixed_pieces << t unless t == SEALED
  end
end

puts "#{fixed_pieces.length} have been assembled together"


top_left_puzzle_piece = puzzle
while top_left_puzzle_piece.west_tile != SEALED
  top_left_puzzle_piece = top_left_puzzle_piece.west_tile
end
while top_left_puzzle_piece.north_tile != SEALED
   top_left_puzzle_piece = top_left_puzzle_piece.north_tile
end

puts "The ID of the top left is #{top_left_puzzle_piece.id}"

# Get width
num_tiles_width = 1
piece = top_left_puzzle_piece
while piece.east_tile != SEALED
  piece = piece.east_tile
  num_tiles_width += 1
end

puts "The finished puzzle is #{num_tiles_width} tiles wide and deep"

# Move Tiles into a 2D array
tiles = []
num_tiles_width.times do
  row = []
  num_tiles_width.times do
    row << nil
  end
  tiles << row
end

unplaced_tiles = fixed_pieces
placed_tiles = []


def find(tiles, tile)
  tiles.each do |r, rs|
    rs.each do |c, v|
      return [r,c] if v == tile
    end
  end
  nil
end

puts "Building a sensible 2D array of the tiles"

tiles = Hash.new {|h,k| h[k] = Hash.new}
tiles[0][0] = top_left_puzzle_piece


placed_tiles << top_left_puzzle_piece
while(placed_tiles.length < (num_tiles_width*num_tiles_width))
  # Find a place_tile that has a neighbor that isn't placed
  placed_tiles.each do |placed_tile|
    r,c = find(tiles, placed_tile)
    if placed_tile.east_tile && placed_tile.east_tile != SEALED && tiles[r][c+1] != placed_tile.east_tile
      tiles[r][c+1] = placed_tile.east_tile
      placed_tiles << placed_tile.east_tile
    end
    if placed_tile.south_tile && placed_tile.south_tile != SEALED && tiles[r+1][c] != placed_tile.south_tile
      tiles[r+1][c] = placed_tile.south_tile
      placed_tiles << placed_tile.south_tile
    end
    if placed_tile.north_tile && placed_tile.north_tile != SEALED && tiles[r-1][c] != placed_tile.north_tile
      tiles[r-1][c] = placed_tile.north_tile
      placed_tiles << placed_tile.north_tile
    end
    if placed_tile.west_tile && placed_tile.west_tile != SEALED && tiles[r][c-1] != placed_tile.west_tile 
      tiles[r][c-1] = placed_tile.west_tile
      placed_tiles << placed_tile.west_tile
    end
  end
end

min_r = tiles.keys.min
min_c = tiles.values.flat_map(&:keys).min
tiles.transform_keys! {|k| k-min_r}

puts "Done building, min_r #{min_r}, min_c #{min_c}"

puts "Heres what the arranged puzzle looks like"
num_tiles_width.times do |r|
  str = ""
  num_tiles_width.times do |c|
    str += tiles[r][c].id.to_s
    str += "\t"
  end
  puts str
end

# Build blank image
length_of_image_in_tiles = num_tiles_width
length_of_each_borderless_tile = piece.borderless_image.length
image_length = length_of_image_in_tiles * length_of_each_borderless_tile

puts "The finished image will be #{image_length}chars x#{image_length}chars"
image = []
image_length.times do |r|
  row = []
  image_length.times do |c|
    row << nil
  end
  image << row
end

# Fill blank image with borderless tiles
num_tiles_width.times do |tile_r|
  num_tiles_width.times do |tile_c|
    tile = tiles[tile_r][tile_c]
    borderless_image = tile.borderless_image
    r_offset = tile_r*borderless_image.length
    col_offset = tile_c*borderless_image.length
    borderless_image.length.times do |image_r|
      borderless_image.length.times do |image_c|
        image[r_offset+image_r][col_offset+image_c] = borderless_image[image_r][image_c]
      end
    end
  end
end


# Print the finished image
puts "Here is the finished image!"
image.each do |row|
  puts row.join("")
end

puts "Now its time to find seamonsters"
seamonster_pattern = <<~SEAMONSTER
                  # 
#    ##    ##    ###
 #  #  #  #  #  #   
SEAMONSTER
PATTERN = seamonster_pattern.split("\n").map {|r| r.split("")}

def found_seamonster?(image)
  image.length.times do |r|
    image.length.times do |c|
      return true if seamonster_at_position?(image, r, c)
    end
  end
  false
end

def seamonster_at_position?(image, r, c)
  PATTERN.length.times do |pattern_r|
    PATTERN[0].length.times do |pattern_c|
      return false if r+pattern_r >= image.length
      return false if c+pattern_c >= image.length
      if image[r+pattern_r][c+pattern_c] != "#" && PATTERN[pattern_r][pattern_c] == "#"
        return false
      end
    end
  end
  true
end

def new_image(image)
  n_image = []
  n_image_length = image.length
  image.length.times do
    new_row = []
    image[0].length.times do 
      new_row << nil
    end
    n_image << new_row
  end
  n_image
end

def rotate_90(image)
  img = new_image(image)
  image.length.times do |i|
    image[0].length.times do |j|
      img[i][j] = image[image.length-j-1][i];
    end
  end
  img
end


# flip along the horizontal axis
def flip_horizontal(image)
  img = new_image(image)
  image.length.times do |i|
    image[0].length.times do |j|
      img[i][j] = image[image.length-i-1][j];
    end
  end
  img
end

def flip_vertical(image)
  img = new_image(image)
  image.length.times do |i|
    image[0].length.times do |j|
      img[i][j] = image[i][image.length-j-1];
    end
  end
  img
end

def find_image_varient_with_seamonsters(image)
  result = []
  
  4.times do |i|
    t = self
    i.times do
      image = rotate_90(image)
    end
    result << image
    result << flip_horizontal(image)
    result << flip_vertical(image)
    result << flip_vertical(flip_horizontal(image))
  end

  result.find {|img| found_seamonster? img}
end

image = find_image_varient_with_seamonsters(image)

puts "And here is it oriented to contain seamonsters!"
image.each do |row|
  puts row.join("")
end

image.length.times do |r|
  image.length.times do |c|
    if seamonster_at_position?(image, r, c)
      PATTERN.length.times do |pattern_r|
        PATTERN[0].length.times do |pattern_c|
          if image[r+pattern_r][c+pattern_c] == "#" && PATTERN[pattern_r][pattern_c] == "#"
            image[r+pattern_r][c+pattern_c] = "@"
          end
        end
      end
    end
  end
end

puts "Here are the detected sea monsters"
image.each do |row|
  puts row.join("")
end

puts "So how many non-seamonster #s are there?"
num_waves = 0
image.each do |row|
  row.each do |val|
    num_waves += 1 if val == "#"
  end
end

puts "Part 2 answer is #{num_waves}"
